@using Umbraco.Core.Logging
@using umbraco.MacroEngines
@using RJP.MultiUrlPicker.Models
@using Newtonsoft.Json
@using Umbraco.Web.Extensions
@using System.Linq
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";

    var title = Model.Content.GetPropertyValue<string>("title");
    var bgimage = Model.Content.GetPropertyValue<IPublishedContent>("heroImage");
    var content = Model.Content.GetPropertyValue<string>("content");
    var customerservice = Model.Content.GetPropertyValue<string>("customerService");
    var CTAButton1 = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("cTAButton1");
    var CTAButton2 = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("cTAButton2");
    var formTitle = Model.Content.GetPropertyValue<string>("formTitle");
    var formContent = Model.Content.GetPropertyValue<string>("formContent");
    var csTitle = Model.Content.GetPropertyValue<string>("csTitle");
    var csContent = Model.Content.GetPropertyValue<string>("csContent");
    var CTAButton = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("cTAButton");

}
<section class="heroBanner">
    @if (bgimage != null)
    {
        <figure class="bannerImage" style="background-image: url('images/banner/about_bg.jpg')"></figure>
    }
</section>
<section class="heroBlock">
    <div class="containerWrapper">
        <div class="bgWrap">
            @if (!string.IsNullOrEmpty(title))
            {
                <h2>@title</h2>
            }
            @if (!string.IsNullOrEmpty(content))
            {
                @Html.Raw(content)
            }
            @if (!string.IsNullOrEmpty(customerservice))
            {
                @Html.Raw(customerservice)
            }
            <ul class="heroLinks">
                @if (Model.Content.HasValue("cTAButton1"))
                {
                    foreach (var CTA in CTAButton1)
                    {
                        var cTAtitle = CTA.GetPropertyValue<string>("title");
                        var cTAimage = CTA.GetPropertyValue<IPublishedContent>("image");
                        var link = CTA.GetPropertyValue<Link>("link");

                        <li class="find-us">
                            @if (link != null)
                            {
                                if (link.Target == "_blank")
                                {
                                    <a href="@link.Url" target="_blank">
                                        <span class="heroLinksImage"><img src="~/images/about/find-us.png"></span>
                                            @if (!string.IsNullOrEmpty(cTAtitle))
                                            {
                                                var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                                    @Html.Raw(replacetitle)
                                            }
                                        
                                    </a>
                                }
                                else
                                {
                                    <a href="@link.Url">
                                        <span class="heroLinksImage"><img src="~/images/about/find-us.png"></span>
                                        @if (!string.IsNullOrEmpty(cTAtitle))
                                        {
                                            var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                            @Html.Raw(replacetitle)
                                        }
                                    </a>
                                }

                            }
                            else
                            {
                                <span class="heroLinksImage"><img src="~/images/about/find-us.png"></span>
                                if (!string.IsNullOrEmpty(cTAtitle))
                                {
                                    var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                    @Html.Raw(replacetitle)
                                }
                            }

                        </li>
                    }

                }
                @if (Model.Content.HasValue("cTAButton2"))
                {
                    foreach (var CTA in CTAButton2)
                    {
                        var cTAtitle = CTA.GetPropertyValue<string>("title");
                        var cTAimage = CTA.GetPropertyValue<IPublishedContent>("image");
                        var link = CTA.GetPropertyValue<Link>("link");

                        <li class="call-us">
                            @if (link != null)
                            {
                                if (link.Target == "_blank")
                                {
                                    <a href="@link.Url" target="_blank">
                                        <span class="heroLinksImage"><img src="~/images/about/call-us.png"></span>
                                        @if (!string.IsNullOrEmpty(cTAtitle))
                                        {
                                            var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                            @Html.Raw(replacetitle)
                                        }
                                       
                                    </a>
                                }
                                else
                                {
                                    <a href="@link.Url">
                                        <span class="heroLinksImage"><img src="~/images/about/call-us.png"></span>
                                        @if (!string.IsNullOrEmpty(cTAtitle))
                                        {
                                            var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                            @Html.Raw(replacetitle)
                                        }
                                    </a>
                                }

                            }
                            else
                            {
                                <span class="heroLinksImage"><img src="~/images/about/call-us.png"></span>
                                if (!string.IsNullOrEmpty(cTAtitle))
                                {
                                    var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                    @Html.Raw(replacetitle)
                                }
                            }

                        </li>
                    }

                }

            </ul>
        </div>
    </div>
</section>
<section class="greyPanel">
    <div class="containerWrapper">
        <div class="bgWrap">
            <div class="titleWrap">
                @if (!string.IsNullOrEmpty(formTitle))
                {
                    <h3>@formTitle</h3>
                }

            </div>
            @if (!string.IsNullOrEmpty(formContent))
            {
                @Html.Raw(formContent)
            }
            <form action="" class="contactForm" id="contactForm">
                @Html.Partial("Form/ContactUs")
            </form>
        </div>
    </div>
</section>
<section class="greyPanel specNeed">
    <div class="containerWrapper">
        <div class="bgWrap">
            <div class="titleWrap">
                @if (!string.IsNullOrEmpty(csTitle))
                {
                    <h3>@csTitle</h3>
                }
            </div>
            @if (!string.IsNullOrEmpty(csContent))
            {
                @Html.Raw(csContent);
            }
            <ul class="heroLinks">
                @if (Model.Content.HasValue("cTAButton"))
                {
                    foreach (var CTA in CTAButton)
                    {
                        var cTAtitle = CTA.GetPropertyValue<string>("title");
                        var cTAimage = CTA.GetPropertyValue<IPublishedContent>("image");
                        var link = CTA.GetPropertyValue<Link>("link");

                        <li class="client-service">
                            @if (link != null)
                    {
                        if (link.Target == "_blank")
                        {
                                    <a href="@link.Url" target="_blank">
                                        <span class="heroLinksImage"><img src="~/images/about/client-services.png"></span>
                                        @if (!string.IsNullOrEmpty(cTAtitle))
                                        {
                                            var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                            @Html.Raw(replacetitle)
                                        }
                                    </a>
                                }
                                else
                                {
                                    <a href="@link.Url">
                                        <span class="heroLinksImage"><img src="~/images/about/client-services.png"></span>
                                        @if (!string.IsNullOrEmpty(cTAtitle))
                                        {
                                            var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                            @Html.Raw(replacetitle)
                                        }
                                    </a>
                                }

                            }
                            else
                            {
                                <span class="heroLinksImage"><img src="~/images/about/client-services.png"></span>
                                if (!string.IsNullOrEmpty(cTAtitle))
                                {
                                    var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                    @Html.Raw(replacetitle)
                                }
                            }

                        </li>
                    }

                }
            </ul>
        </div>
    </div>
</section>

