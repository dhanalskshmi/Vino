@using RJP.MultiUrlPicker.Models;
@using umbraco.MacroEngines
@using Newtonsoft.Json
@using RJP.MultiUrlPicker.Models
@using umbraco.NodeFactory
@using ContentModels = Umbraco.Web.PublishedContentModels
@using umbraco.cms.businesslogic.web
@using Umbraco.Web.Extensions
@using System.Linq
@using System.Text.RegularExpressions
@using System.Web.Script.Serialization;
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    var alertMessage = "";
    var alertVisible = false;
    var pageVisible = false;
    var hideAlert = Model.Content.AncestorOrSelf(1).GetPropertyValue<bool>("hideAlert"); 
    var alertPosition = Model.Content.AncestorOrSelf(1).GetPropertyValue<string>("alertPosition");
    var alertShowPage = Model.Content.AncestorOrSelf(1).GetPropertyValue<IEnumerable<IPublishedContent>>("alertShowPage");
    if (Model.Content.AncestorOrSelf(1).HasProperty("alertContent") && Model.Content.AncestorOrSelf(1).HasValue("alertContent"))
    {
        alertMessage = Model.Content.AncestorOrSelf(1).GetPropertyValue<string>("alertContent");
    }

    var startDate = Model.Content.AncestorOrSelf(1).HasProperty("alertStartDate") && Model.Content.AncestorOrSelf(1).HasValue("alertStartDate") ? Model.Content.AncestorOrSelf(1).GetProperty("alertStartDate").Value.ToString() : string.Empty;
    var endDate = Model.Content.AncestorOrSelf(1).HasProperty("alertEndDate") && Model.Content.AncestorOrSelf(1).HasValue("alertEndDate") ? Model.Content.AncestorOrSelf(1).GetProperty("alertEndDate").Value.ToString() : string.Empty;
    if (string.IsNullOrEmpty(startDate) && string.IsNullOrEmpty(endDate))
    {
        alertVisible = false;
    }
    else if(hideAlert == true)
    {
        alertVisible = false;
    }
    else if (!string.IsNullOrEmpty(startDate) && (string.IsNullOrEmpty(endDate)))
    {
        alertVisible = DateTime.Now > Convert.ToDateTime(startDate);
    }
    else if (string.IsNullOrEmpty(startDate) && (!string.IsNullOrEmpty(endDate)))
    {
        alertVisible = DateTime.Now < Convert.ToDateTime(endDate);
    }
    else
    {
        alertVisible = DateTime.Now > Convert.ToDateTime(startDate) && DateTime.Now < Convert.ToDateTime(endDate);
    }
}

@if (Model.Content.HasValue("alertShowPage"))
{
    pageVisible = false;
    foreach (var node in alertShowPage)
    {
        var CurrentNode = new DynamicNode().NodeById(node);
        var CurrentPageId = Umbraco.TypedContent(CurrentNode.Id);
        // int nodeId = Convert.ToInt32(CurrentPageId);
        if (CurrentNode.Id == Model.Content.Id)
        {
            pageVisible = true;
        }

    }
}

@if (alertVisible && pageVisible)
{
    if (alertPosition == "Top")
    {
        <div class="alertsPannel">
            <div class="alertsWrap">
                <div class="wrap">
                    @Html.Raw(alertMessage)
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="floatingAlerts">
            <div class="floatWrap">
                <div class="wrap">
                   @Html.Raw(alertMessage)
                </div>
            </div>
        </div>

    }

}
