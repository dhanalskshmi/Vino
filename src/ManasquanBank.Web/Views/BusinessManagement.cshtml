@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using umbraco.MacroEngines
@using Newtonsoft.Json
@using RJP.MultiUrlPicker.Models
@using umbraco.NodeFactory
@using ContentModels = Umbraco.Web.PublishedContentModels
@using umbraco.cms.businesslogic.web
@using Umbraco.Web.Extensions
@using System.Linq
@using System.Web.Script.Serialization;
@{
    Layout = "Master.cshtml";
    var title = Model.Content.GetPropertyValue<string>("title");
    var heroImage = Model.Content.GetPropertyValue<IPublishedContent>("heroImage");
    var content = Model.Content.GetPropertyValue<string>("content");
    var cTAButton1 = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("cTAButton1");
    var cTAButton2 = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("cTAButton2");
    var thankYouMessage = Model.Content.GetProperty("thankYouMessage").HasValue ? Model.Content.GetProperty("thankYouMessage").Value : "";
    var reOrderCheckAdminEmail = Model.Content.HasValue("AdminEmail") ? Model.Content.GetPropertyValue<int>("AdminEmail") : 0;
    var reOrderCheckConfirmationEmail = Model.Content.HasValue("ConfirmationEmail") ? Model.Content.GetPropertyValue<int>("ConfirmationEmail") : 0;
}
@section InnerTopStyle {
<link href="~/css/lib/jquery-ui.css" rel="stylesheet" />
<link href="~/css/lib/jquery.timepicker.css" rel="stylesheet" />
}
<div class="re-order">

    <section class="heroBanner">
        @if (heroImage != null)
        {
            <figure class="bannerImage" style="background-image: url(@heroImage.Url)"></figure>
        }
    </section>
    <section class="heroBlock">
        <div class="containerWrapper">
            <div class="bgWrap">
                @if (!string.IsNullOrEmpty(title))
                {
                    <h2>@title</h2>
                }
                @if (!string.IsNullOrEmpty(content))
                {
                    @Html.Raw(content)
                }

                <ul class="heroLinks">
                    @if (Model.Content.HasValue("cTAButton1"))
                    {
                        foreach (var CTA in cTAButton1)
                        {
                            var cTAtitle = CTA.GetPropertyValue<string>("title");
                            var iconImage = CTA.GetPropertyValue<IPublishedContent>("iconImage");
                            var link = CTA.GetPropertyValue<Link>("link");

                            <li class="find-us">
                                @if (link != null)
                                {
                                    if (link.Target == "_blank")
                                    {
                                        <a href="@link.Url" target="_blank">
                                            <span class="heroLinksImage">
                                                @if (iconImage != null)
                                                {
                                                    <img src="@iconImage.Url" alt="@iconImage.Name">
                                                }
                                                else
                                                {
                                                    <img src="/images/about/find-us.png" alt="find-us">
                                                }
                                            </span>
                                            <span class="heroLinksText">
                                                @if (!string.IsNullOrEmpty(cTAtitle))
                                                {
                                                    @Html.Raw(cTAtitle)
                                                }
                                            </span>

                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@link.Url">
                                            <span class="heroLinksImage">
                                                @if (iconImage != null)
                                                {
                                                    <img src="@iconImage.Url" alt="@iconImage.Name">
                                                }
                                                else
                                                {
                                                    <img src="/images/about/find-us.png" alt="find-us">
                                                }
                                            </span>
                                            <span class="heroLinksText">
                                                @if (!string.IsNullOrEmpty(cTAtitle))
                                                {
                                                    @Html.Raw(cTAtitle)
                                                }
                                            </span>
                                        </a>
                                    }

                                }
                                else
                                {
                                    <span class="heroLinksImage">
                                        @if (iconImage != null)
                                        {
                                            <img src="@iconImage.Url" alt="@iconImage.Name">
                                        }
                                        else
                                        {
                                            <img src="/images/about/find-us.png" alt="find-us">
                                        }
                                    </span>
                                    <span class="heroLinksText">
                                        @if (!string.IsNullOrEmpty(cTAtitle))
                                        {
                                            @Html.Raw(cTAtitle)
                                        }
                                    </span>
                                }

                            </li>
                        }

                    }
                    @if (Model.Content.HasValue("cTAButton2"))
                    {
                        foreach (var CTA in cTAButton2)
                        {
                            var cTAtitle = CTA.GetPropertyValue<string>("title");
                            var iconImage = CTA.GetPropertyValue<IPublishedContent>("iconImage");
                            var link = CTA.GetPropertyValue<Link>("link");

                            <li class="client-service">
                                @if (link != null)
                                {
                                    if (link.Target == "_blank")
                                    {
                                        <a href="@link.Url" target="_blank">
                                            <span class="heroLinksImage">
                                                @if (iconImage != null)
                                                {
                                                    <img src="@iconImage.Url" alt="@iconImage.Name">
                                                }
                                                else
                                                {
                                                    <img src="/images/about/expert-icon.png" alt="exper-icon">
                                                }
                                            </span>
                                            <span class="heroLinksText">
                                                @if (!string.IsNullOrEmpty(cTAtitle))
                                                {
                                                    @Html.Raw(cTAtitle)
                                                }
                                            </span>

                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@link.Url">
                                            <span class="heroLinksImage">
                                                @if (iconImage != null)
                                                {
                                                    <img src="@iconImage.Url" alt="@iconImage.Name">
                                                }
                                                else
                                                {
                                                    <img src="/images/about/expert-icon.png" alt="expert-icon">
                                                }
                                            </span>
                                            <span class="heroLinksText">
                                                @if (!string.IsNullOrEmpty(cTAtitle))
                                                {
                                                    var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                                    @Html.Raw(replacetitle)
                                                }
                                            </span>
                                        </a>
                                    }

                                }
                                else
                                {
                                    <span class="heroLinksImage">
                                        @if (iconImage != null)
                                        {
                                            <img src="@iconImage.Url" alt="@iconImage.Name">
                                        }
                                        else
                                        {
                                            <img src="/images/about/expert-icon.png" alt="expert-icon">
                                        }
                                    </span>
                                    <span class="heroLinksText">
                                        @if (!string.IsNullOrEmpty(cTAtitle))
                                        {
                                            var replacetitle = cTAtitle.Replace("<p>", "").Replace("</p>", "");
                                            @Html.Raw(replacetitle)
                                        }
                                    </span>
                                }

                            </li>
                        }

                    }
                </ul>
            </div>
        </div>
    </section>
    <section class="greyPanel">
        <div class="containerWrapper">
            <div class="bgWrap">
@if (String.IsNullOrEmpty(ViewBag.ReOrderCheckErrorMessage) == false)
{
    <div class="alert alert-warning">
        <strong>Warning!</strong> @ViewBag.ReOrderCheckErrorMessage
    </div>
}
                <div class="contactFormWrap">

                    @using (Html.BeginUmbracoForm("SubmitForm", "ReOrderCheck", FormMethod.Post, new { id = "contactForm", @class = "contactForm wpcf7-form" }))
                    {


                        if (String.IsNullOrEmpty(ViewBag.ReOrderCheckSuccessMessage) == false)
                        {
                            if (!string.IsNullOrEmpty(thankYouMessage.ToString()))
                            {
                                <div id="contactSucc">
                                    <h4>@Html.Raw(thankYouMessage)</h4>
                                </div>
                            }
                            else
                            {
                                <div id="contactSucc">
                                    <h4>@ViewBag.ReOrderCheckSuccessMessage</h4>
                                </div>
                            }

                        }
                        else
                        {



                            string secretKey = @System.Configuration.ConfigurationManager.AppSettings["recaptchaPrivateKey"];
                            string publicKey = @System.Configuration.ConfigurationManager.AppSettings["recaptchaPublicKey"];
                            <div class="row">

                                <div class="col-md-12 col-sm-12 col-lg-12 parentWrapper">
                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="loanPurpose">Department</label>
                                        <select name="loanPurpose" id="loanPurpose" class="form-control selectBox" default="" required="">
                                            <option value=""></option>
                                            <option value="">Executive Management </option>
                                            <option value="">Senior Management </option>
                                            <option value="">Branch Managers </option>
                                            <option value="">Foundation </option>
                                        </select>
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>
                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="loanOfficer">Employee</label>
                                        <select name="loanOfficer" id="loanOfficer" class="form-control selectBox" default="" required="">
                                            <option value=""></option>
                                            <option value="">Ralph Tancredi</option>
                                            <option value="">William L. Kays </option>
                                            <option value="">Lisa Connell </option>
                                            <option value="">David Tepper </option>
                                            <option value="">Kathie Adams</option>
                                            <option value="">Suellen Arecchi</option>
                                            <option value="">Nancy Canary</option>
                                            <option value="">Jeffrey Casten</option>
                                            <option value="">Luke Caverly</option>
                                            <option value="">Lisa Colonno</option>
                                            <option value="">Beth Culos</option>
                                            <option value="">Robert Hart</option>
                                            <option value="">Wililam Horvath</option>
                                            <option value="">Rich Lanza</option>
                                            <option value="">Loralee Neyland</option>
                                            <option value="">Christina Paccione</option>
                                            <option value="">Lisa Roettger</option>
                                            <option value="">Ann Slavick</option>
                                            <option value="">Nancy Steck</option>
                                            <option value="">Alan J Stuart</option>
                                            <option value="">Jennifer Weisert</option>
                                            <option value="">Mary Anne Whittemore</option>
                                            <option value="">Steve Yarosz</option>
                                        </select>
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>
                                    <div class="form-group col-lg-4 col-sm-6 col-xs-12 nopadding">
                                        <label for="firstName">First Name</label>
                                        <input type="text" class="form-control " maxlength="50" required name="firstName" id="firstName">
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>
                                    <div class="form-group col-lg-4 col-sm-6 col-xs-12 nopadding">
                                        <label for="lastName">Last Name</label>
                                        <input type="text" class="form-control " maxlength="50" required name="lastName" id="lastName">
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>
                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="cntTelePhone">Phone number</label>
                                        <input type="text" class="form-control" name="cntTelePhone" required id="cntTelePhone">
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>
                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="cntEmail">Email</label>
                                        <input type="email" class="form-control error" required="" name="cntEmail" id="cntEmail" aria-required="true" aria-invalid="true">
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>
                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="addressOne">Address line 1</label>
                                        <input type="text" class="form-control " required name="addressOne" id="addressOne">
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>
                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="addressTwo">Address line 2</label>
                                        <input type="text" class="form-control" name="addressTwo" id="addressTwo">

                                    </div>
                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="city">City</label>
                                        <input type="text" class="form-control" required name="city" id="city">
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>
                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="state">State</label>
                                        <select name="state" id="state" class="form-control selectBox" default="" required="">
                                            <option value="">-Select State-</option>
                                        </select>
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>

                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="zip">Zip Code</label>
                                        <input type="text" class="form-control " required name="zip" id="zip">
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>
                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="country">Country</label>
                                        <select name="country" id="country" class="form-control selectBox" default="" required="">
                                            <option value="" rel="">-Select Country-</option>
                                        </select>
                                        <span class="errorSpan vd f-error">*</span>
                                    </div>
                                    <div class="form-group col-lg-6 col-xs-12 nopadding">
                                        <label for="call">Best time to call</label>
                                        <input type="text" class="form-control time ui-timepicker-input" name="call" id="basicExample">

                                    </div>

                                </div>
                                <div class="col-lg-12 col-xs-12">
                                    <div class="form-group">
                                        <label for="cntComments">Message</label>
                                        <textarea class="form-control txtArea" name="cntComments" id="cntComments" rows="4"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="row mob-flex">

                                <button class="btnManasq"><span>SUBMIT</span></button>
                                <input type="hidden" id="AdminEmail" name="AdminEmail" value="@reOrderCheckAdminEmail" />
                                <input type="hidden" id="ConfirmationEmail" name="ConfirmationEmail" value="@reOrderCheckConfirmationEmail" />
                            </div>

                        }
                    }
                </div>
            </div>
        </div>
    </section>

 </div>
@section InnerBottomScript {
<script src="~/scripts/lib/jquery-ui.js"></script>
<script src="~/scripts/lib/jquery.timepicker.min.js"></script>

<script>
$(document).ready(function() {
  $('#basicExample').timepicker();

   $('body').on('click', '#basicExample', function() {
var maxMenuWidth = $("#basicExample").innerWidth();
$(".ui-timepicker-wrapper").css({'max-width':maxMenuWidth+1});

});

$(window).on("load resize", function(){
    var maxMenuWidth = $('.form-group').width();
    $(".ui-timepicker-list").css({'max-width':maxMenuWidth+2});
});
    $("#contactSucc").length > 0 && $("html, body").animate({
        scrollTop: $(".contactFormWrap").offset().top - 200
    }, "slow")

    if (jQuery("#zip").length > 0) {
    document.getElementById('zip').addEventListener('input', function (e) {
        var x = e.target.value.replace(/\D/g, '').match(/(\d{0,5})/);
        e.target.value = x[1];
    });
}
   if (jQuery("#accNo").length > 0) {
    document.getElementById('accNo').addEventListener('input', function (e) {
        var x = e.target.value.replace(/\D/g, '').match(/(\d{0,4})/);
        e.target.value = x[1];
    });
}

});

// $(document).ready(function () {
//     $.each(myJson.countries, function (index, value) {
//         $("#country").append('<option rel="' + index + '" value="' + value.country + '">' + value.country + '</option>');
//     });
//     country_id = $("#country").attr("default");
//     $("#country").find("option[value='" + country_id + "']").prop("selected", true).trigger("change");
//     $("#country").on('selectmenuchange', function () {
//         $("#state").selectmenu("destroy");
//          $("#state").append('<option rel="' + index1 + '" value="' + value1 + '">' + value1 + '</option>');

//         country_id = $(this).find('option:selected').attr('rel');
//           $("#state").selectmenu();
//         $.each(myJson.countries[country_id].states, function (index1, value1) {
//             $("#state").find("option:first").text("-Select State-");
//             $("#state").append('<option rel="' + index1 + '" value="' + value1 + '">' + value1 + '</option>');
//             // $("#SltState2").selectmenu("refresh");
//         });


//     });

//     country_id = $("#country").find('option:selected').attr('rel');
//     if (country_id != "") {
//         $.each(myJson.countries[country_id].states, function (index1, value1) {
//             $("#state").find("option:first").text("-Select State-");
//             $("#state").append('<option rel="' + index1 + '" value="' + value1 + '">' + value1 + '</option>');
//             // $("#state").selectmenu("refresh");
//         });


//     }
// });

// $(document).ready(function () {
// var country_id;
// var state_id;
// $.each(myJson.countries, function (index, value) {
//     $("#country").append('<option rel="' + index + '" value="' + value.country + '">' + value.country + '</option>');
//      $("#country").change(function () {
//         $("#state").find("option:gt(0)").remove();
//         $("#state").find("option:first").text("Loading...");
//         $("#state").selectbox();
//          country_id = $(this).find('option:selected').attr('rel');
//          $.each(myJson.countries[country_id].states, function (index1, value1) {
//             $("#state").find("option:first").text("-Select State-");
//             $("#state").append('<option rel="' + index1 + '" value="' + value1 + '">' + value1 + '</option>');
//             $("#state").selectbox();
//         });
//     });
//  });
// country_id = $("#country").attr("default");
// $("#country").find("option[value='" + country_id + "']").prop("selected", true).trigger("change");
//  state_id = $("#state").attr("default");
// $("#state").find("option[value='" + state_id + "']").prop("selected", true).trigger("change");
// $("#state").selectbox();
// $("#country").selectbox();
// });
</script>

}
