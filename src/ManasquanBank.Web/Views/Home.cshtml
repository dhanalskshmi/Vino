@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using ContentModels = Umbraco.Web.PublishedContentModels;
@using RJP.MultiUrlPicker.Models;
@using System.Text.RegularExpressions;
@{
    Layout = "Master.cshtml";
    var bannerImage = Model.Content.GetPropertyValue<IPublishedContent>("bannerImage");
    var backgroundVideo = Model.Content.GetPropertyValue<string>("backgroundVideo");
    var bannerText = Model.Content.GetPropertyValue<string>("bannerText");
    /*Promotion Text */
    var promotionPanel = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("promotionPanel");
    string[] classes = new string[] { "bunisessBank", "serviceContent", "personalBank", "mortage", "kasasa", "didgitalCenter", "clentService" };
    /* Action Panel */
    var actionPanel = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("actionPanel");

}
<div class="loginBlocks">
    <div class="personalLogin">
        <h3>PERSONAL BANKING</h3>
        <form id="mpersonalLogin" action="https://web1.secureinternetbank.com/pbi_pbi1151/login/remote/221272167" method="POST">
            <label for="username" class="screen-reader-text ">access id</label>
            <input type="text" name="username" id="username" value="" class="txtBox" title="Access ID" required placeholder="Access ID">
            <label for="password" class="screen-reader-text ">access password</label>
            <input type="password" name="password" id="password" value="" class="txtBox" title="Password" required placeholder="Password">
            <button type="submit"> <span>Login</span></button>
            <p>
                <a href="https://web1.secureinternetbank.com/pbi_pbi1151/enroll/221272167" target="_blank">Sign Up</a>
                <a class="link-text" href="https://web1.secureinternetbank.com/pbi_pbi1151/ForgotPassword/221272167" target="_blank">Forgot Password</a>
            </p>
        </form>
    </div>
    <div class="businessLogin">
        <h3>BUSINESS BANKING</h3>
        <form id="mbusinessLogin" action="" method="post">
            <label for="AccessID" class="screen-reader-text ">business access id</label>
            <input type="text" name="AccessID" id="AccessID" value="" class="txtBox" title="Access ID" required placeholder="Access ID">
            <label for="business_password_mob" class="screen-reader-text ">business access password</label>
            <input type="password" name="password" value="" class="txtBox" title="Password" required placeholder="Password">
            <button type="submit"> <span>Login</span></button>
            <p>
                <a href="#">Forgot Password</a>
            </p>
        </form>
    </div>
</div>
<section class="bannerWrapper">
    @if (!string.IsNullOrEmpty(backgroundVideo))
    {
        <div class="bannerWrap player" id="bgndVideo" data-property="{videoURL:'@backgroundVideo',containment:'div.player', showControls:false, autoPlay:true, loop:true, vol:1, mute:false, opacity:1, addRaster:true, optimizeDisplay:true}">
            @if (bannerImage != null)
            {
                <figure class="bannerImage" style="background-image: url('@bannerImage.Url')">

                </figure>
            }
            <div id="wrapper" style="position:relative; padding:10px 0;z-index:10">

                <div class="goto">
                    <button id="togglePlay" class="command" onclick="jQuery('#bgndVideo').YTPTogglePlay()"></button>
                </div>
              </div>
            <div class="bannerContent">
                <div class="containerWrapper">
                    @if (!string.IsNullOrEmpty(bannerText))
                    {
                        @Html.Raw(bannerText)
                    }

                </div>

            </div>
        </div>
    }
    else
    {
        <div class="bannerWrap">
            @if (bannerImage != null)
            {
                <figure class="bannerImage" style="background-image: url('@bannerImage.Url')">
                </figure>
            }
            <div class="bannerContent">
                <div class="containerWrapper">
                    @if (!string.IsNullOrEmpty(bannerText))
                    {
                        @Html.Raw(bannerText)
                    }

                </div>

            </div>
        </div>

    }
</section>


<section class="bankingServices">
    <div class="containerWrapper">
        <ul>
            @if (Model.Content.AncestorOrSelf(1).HasValue("promotionPanel"))
            {
                int i = 1;
                foreach (var promotion in promotionPanel)
                {
                    var promotionTitle = promotion.GetPropertyValue<string>("promotionTitle");
                    var backgroundColor = promotion.GetPropertyValue<string>("backgroundColor");
                    var description = promotion.GetPropertyValue<string>("description");
                    var backgroundImage = promotion.GetPropertyValue<IPublishedContent>("backgroundImage");
                    var cTAButton = promotion.GetPropertyValue<Link>("cTAButton");


                    if (i == 1)
                    {

                        <li class="bunisessBank">
                            <figure class="imgBlock" style="background-image: url('@backgroundImage.Url')">
                                @if (cTAButton != null)
                                {
                                    if (cTAButton.Target == "_blank")
                                    {
                                        <a href="@cTAButton.Url" target="_blank">
                                            @if (!string.IsNullOrEmpty(promotionTitle))
                                            {
                                                string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                                @promoTitle
                                            }


                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@cTAButton.Url">
                                            @if (!string.IsNullOrEmpty(promotionTitle))
                                            {
                                                string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                                @promoTitle
                                            }

                                        </a>
                                    }
                                }

                            </figure>
                            <div class="serviceContent">
                                <div class="title">
                                    @if (!string.IsNullOrEmpty(promotionTitle))
                                    {
                                        @Html.Raw(promotionTitle)
                                    }
                                </div>
                            </div>
                        </li>
                    }
                    else if (i == 2)
                    {
                        <li class="personalBank">
                            <figure class="imgBlock" style="background-image: url('@backgroundImage.Url')">
                                @if (cTAButton != null)
                                {
                                    if (cTAButton.Target == "_blank")
                                    {
                                        <a href="@cTAButton.Url" target="_blank">
                                            @if (!string.IsNullOrEmpty(promotionTitle))
                                            {
                                                string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                                @promoTitle
                                            }


                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@cTAButton.Url">
                                            @if (!string.IsNullOrEmpty(promotionTitle))
                                            {
                                                string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                                @promoTitle
                                            }

                                       </a>
                                    }
                                }
                            </figure>
                            <div class="serviceContent">
                                <div class="title">
                                    @if (!string.IsNullOrEmpty(promotionTitle))
                                    {
                                        @Html.Raw(promotionTitle)
                                    }

                                </div>
                            </div>
                        </li>
                    }
                    else if (i == 3)
                    {

                        <li class="mortage" style="background: @backgroundColor">
                            @if (cTAButton.Target == "_blank")
                            {
                                <a href="@cTAButton.Url" target="_blank">
                                    <div class="serviceContent">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            @Html.Raw(promotionTitle)
                                        }

                                    </div>
                                </a>
                            }
                            else
                            {
                                <a href="@cTAButton.Url">
                                    <div class="serviceContent">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            @Html.Raw(promotionTitle)
                                        }
                                    </div>
                                </a>
                            }
                        </li>
                    }
                    else if (i == 4)
                    {

                        <li class="@classes[i]" style="background: @backgroundColor">
                            <div class="serviceContent">
                                <div class="detailBlock">
                                    @Html.Raw(promotionTitle)
                                    @if (cTAButton.Target == "_blank")
                                    {
                                        <a class="btnManasq" href="@cTAButton.Url" target="_blank" title="@cTAButton.Name"><span>@cTAButton.Name </span></a>
                                    }
                                    else
                                    {
                                        <a class="btnManasq" href="@cTAButton.Url" title="@cTAButton.Name"><span>@cTAButton.Name </span></a>
                                    }

                                </div>
                            </div>
                            <figure>
                                <img src="@backgroundImage.Url" alt="@Html.Raw(promotionTitle)">
                            </figure>
                        </li>
                    }
                    else if (i == 5)
                    {
                        <li class="didgitalCenter">
                            <figure class="imgBlock" style="background-image: url('@backgroundImage.Url')">
                                @if (cTAButton != null)
                                {
                                    if (cTAButton.Target == "_blank")
                                    {
                                        <a href="@cTAButton.Url" target="_blank">
                                           @if (!string.IsNullOrEmpty(promotionTitle))
                                           {
                                               string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                                @promoTitle
                                           }


                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@cTAButton.Url">
                                            @if (!string.IsNullOrEmpty(promotionTitle))
                                            {
                                                string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                                @promoTitle
                                            }


                                        </a>
                                    }
                                }
                            </figure>
                            <div class="serviceContent">
                                <div class="title">
                                    @if (!string.IsNullOrEmpty(promotionTitle))
                                    {
                                        @Html.Raw(promotionTitle)
                                    }
                                </div>
                            </div>
                        </li>

                    }
                    else
                    {

                        <li class="clentService">
                            <figure class="imgBlock" style="background-image: url('@backgroundImage.Url')">
                                @if (cTAButton != null)
                                {
                                    if (cTAButton.Target == "_blank")
                                    {
                                        <a href="@cTAButton.Url" target="_blank">
                                            @if (!string.IsNullOrEmpty(promotionTitle))
                                            {
                                                string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                                @promoTitle
                                            }


                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@cTAButton.Url">
                                           @if (!string.IsNullOrEmpty(promotionTitle))
                                           {
                                               string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                            @promoTitle
                                           }


                                        </a>
                                    }
                                }
                            </figure>
                            <div class="serviceContent">
                                <div class="title">
                                    @if (!string.IsNullOrEmpty(promotionTitle))
                                    {
                                        @Html.Raw(promotionTitle)
                                    }
                                </div>
                            </div>
                        </li>
                    }
                    i++;
                }
            }
        </ul>
    </div>
</section>
<section class="bluePannel animatable">
    <div class="containerWrapper">
        <div class="bgWrap">
            @if (Model.Content.AncestorOrSelf(1).HasValue("actionPanel"))
            {
                int j = 1;
                foreach (var action in actionPanel)
                {
                    var actionTitle = action.GetPropertyValue<string>("actionTitle");
                    var actionDescription = action.GetPropertyValue<string>("actionDescription");
                    var tagLineSentence = action.GetPropertyValue<string>("tagLineSentence");
                    var actioncTAButton = action.GetPropertyValue<Link>("actioncTAButton");
                    <div class="detailsWrap">
                        <div class="wraps">
                            @if (!string.IsNullOrEmpty(actionTitle))
                            {
                                <h2>@actionTitle </h2>
                            }
                            @if (!string.IsNullOrEmpty(tagLineSentence))
                            {
                                <h3>@tagLineSentence </h3>
                            }
                            @if (!string.IsNullOrEmpty(actionDescription))
                            {
                                @Html.Raw(actionDescription)
                            }
                        </div>
                        @if (actioncTAButton.Target == "_blank")
                    {
                            <a class="btnManasq" href="@actioncTAButton.Url" target="_blank" title="@actioncTAButton.Name"><span>@actioncTAButton.Name </span></a>
                        }
                        else
                        {
                            <a class="btnManasq" href="@actioncTAButton.Url" title="@actioncTAButton.Name"><span>@actioncTAButton.Name </span></a>
                        }

                    </div>
                    if (j == 1)
                    {

                        <figure>
                            <img src="~/images/home/img_or.png" alt="OR">
                        </figure>
                    }
                    j++;
                }

            }
        </div>
    </div>
</section>
@{

    var foundationbackgroundImage = Model.Content.GetPropertyValue<IPublishedContent>("backgroundImage");
    var titleText = Model.Content.GetPropertyValue<string>("titleText");
    var foundationTaglineText = Model.Content.GetPropertyValue<string>("foundationTaglineText");
    var foundationDescription = Model.Content.GetPropertyValue<string>("foundationDescription");
    var foundationcTAButton = Model.Content.GetPropertyValue<Link>("cTAButton");
}
<section class="communityPannel animatable">
    <div class="bgWraps">
        <div class="imgBlock">
            <div class="containerWrapper">
                <figure style="background-image: url('@foundationbackgroundImage.Url')">
                </figure>
            </div>
        </div>
        <div class="titleBlock">
            <div class="containerWrapper">
                @if (!string.IsNullOrEmpty(titleText))
                {
                    <h2>@Html.Raw(titleText.Replace(" ", "</br>")) </h2>
                }


            </div>
        </div>
        <div class="redBlock">
            <div class="containerWrapper">
                @if (!string.IsNullOrEmpty(foundationTaglineText))
                {
                    <h2>@Html.Raw(foundationTaglineText.Replace(" ", "</br>")) </h2>
                }
            </div>
        </div>
        <div class="detailBlock">
            <div class="containerWrapper">
                <div class="wraps">
                    @if (!string.IsNullOrEmpty(foundationDescription))
                    {
                        @Html.Raw(foundationDescription)
                    }
                    @if (foundationcTAButton.Target == "_blank")
                    {
                        <a class="btnManasq" href="@foundationcTAButton.Url" target="_blank" title="@foundationcTAButton.Name"><span>@foundationcTAButton.Name </span></a>
                    }
                    else
                    {
                        <a class="btnManasq" href="@foundationcTAButton.Url" title="@foundationcTAButton.Name"><span>@foundationcTAButton.Name </span></a>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
@{
    var appTitle = Model.Content.GetPropertyValue<string>("appTitle");
    var appleStoreLink = Model.Content.GetPropertyValue<string>("appleStoreLink");
    var googlePlayStoreLink = Model.Content.GetPropertyValue<string>("googlePlayStoreLink");
    var appDescription = Model.Content.GetPropertyValue<string>("appDescription");
    var appLogo = Model.Content.GetPropertyValue<IPublishedContent>("appLogo");
}

<section class="appPannel animatable">
    <div class="containerWrapper">
        <div class="bgWraps">
            <div class="appDetails">
                @if (!string.IsNullOrEmpty(appTitle))
                {
                    <h2>@appTitle </h2>
                }
                @if (!string.IsNullOrEmpty(appDescription))
                {
                    @Html.Raw(appDescription)
                }
                <div class="appStores">
                    <figure class="">
                        <a href="@appleStoreLink" target="_blank">
                           
                            <img src="~/images/home/apple_app.png" alt="App Store Icon">
                        </a>
                    </figure>
                    <figure>
                        <a href="@googlePlayStoreLink" target="_blank">
                            <img src="~/images/home/google_app.png" alt="Play Store Icon">
                        </a>
                    </figure>
                </div>
            </div>
            <figure class="imgDesg">
                @if (appLogo != null)
                {
                    <img src="@appLogo.Url" alt="Mobile Icon">
                }
                
            </figure>
        </div>
    </div>
</section>
@{
    var knowledgeTitle = Model.Content.GetPropertyValue<string>("knowledgeTitle");
    var knowledgeBackgroundImage = Model.Content.GetPropertyValue<IPublishedContent>("knowledgeBackgroundImage");
    var featureDescription = Model.Content.GetPropertyValue<string>("featureDescription");
    var featurecTAButton = Model.Content.GetPropertyValue<Link>("featurecTAButton");
    var featureLists = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("featureLists");
}
<section class="knowledgePannel animatable">
    <div class="containerWrapper">
        <div class="bgWraps">
            @if (!string.IsNullOrEmpty(knowledgeTitle))
            {
                <h2>@knowledgeTitle </h2>
            }
            @if (!string.IsNullOrEmpty(featureDescription))
            {
                @Html.Raw(featureDescription)
            }
            @if (Model.Content.AncestorOrSelf(1).HasValue("featureLists"))
            {
                <ul>
                    @foreach (var feature in featureLists)
                {
                    var featureTitle = feature.GetPropertyValue<string>("featureTitle");
                    var featureImage = feature.GetPropertyValue<IPublishedContent>("featureImage");
                        <li>
                            <figure>
                                <img src="@featureImage.Url" alt="@featureTitle">
                            </figure>
                            @if (!string.IsNullOrEmpty(featureTitle))
                            {
                                <h4>@featureTitle </h4>
                            }
                        </li>
                    }
                </ul>
            }


            @if (featurecTAButton.Target == "_blank")
            {
                <a class="btnManasq" href="@featurecTAButton.Url" target="_blank" title="@featurecTAButton.Name"><span>@featurecTAButton.Name </span></a>
            }
            else
            {
                <a class="btnManasq" href="@featurecTAButton.Url" title="@featurecTAButton.Name"><span>@featurecTAButton.Name </span></a>
            }

        </div>
    </div>
</section>

@Html.Partial("SocialMedia")

@section InnerBottomScript {

    <script>
        var myPlayer;
        jQuery(function () {
            myPlayer = jQuery("#bgndVideo").YTPlayer();
            // EVENTS: YTPReady YTPStart YTPEnd YTPPlay YTPLoop YTPPause YTPBuffering YTPMuted YTPUnmuted YTPChangeVideo
            myPlayer.on("YTPReady YTPStart YTPEnd YTPPlay YTPLoop YTPPause YTPBuffering YTPMuted YTPUnmuted YTPChangeVideo", function (e) {
                if (e.type == 'YTPPlay') {
                    jQuery('#bgndVideo').YTPToggleVolume()
                }
            });
            myPlayer.on("YTPPlay", function () {
                $("#togglePlay").removeClass("play pause");
                $("#togglePlay").addClass("pause");
            });

            myPlayer.on("YTPPause", function () {
                $("#togglePlay").removeClass("play pause");
                $("#togglePlay").addClass("play");
            });
        });

        function checkForVal(val) {
            return val || 0;
        }


    </script>


}