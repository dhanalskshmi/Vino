@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using ContentModels = Umbraco.Web.PublishedContentModels;
@using RJP.MultiUrlPicker.Models;
@using System.Text.RegularExpressions;
@using ClientDependency.Core.Mvc
@{
    Layout = "Master.cshtml";
    var bannerImage = Model.Content.GetPropertyValue<IPublishedContent>("bannerImage");
    var backgroundVideo = Model.Content.GetPropertyValue<string>("backgroundVideo");
    var bannerText = Model.Content.GetPropertyValue<string>("bannerText");
    /*Promotion Text */
    var promotionPanel = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("promotionPanel");
    string[] classes = new string[] { "bunisessBank", "serviceContent", "personalBank", "mortage", "kasasa", "didgitalCenter", "clentService" };
    /* Action Panel */
    var actionPanel = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("actionPanel");
    Html.RequiresCss("~/css/lib/jquery.mb.YTPlayer.min.css", 3);
    Html.RequiresJs("~/scripts/lib/jquery.mb.YTPlayer.js", 7);
}
@section BackgroundImage {
    @if (!string.IsNullOrEmpty(backgroundVideo))
    {
        if (bannerImage != null)
        {
        <div class="fixedBg fade out bannerWrapper" style="background-image: url('@bannerImage.Url')">
            <div class="bannerWrap player" id="bgndVideo" data-property="{videoURL:'@backgroundVideo',containment:'div.player', showControls:false, autoPlay:true, loop:true, mute:true, opacity:1, addRaster:true, optimizeDisplay:true}">
            </div>
        </div>
        }
        else
        {
            <div class="fixedBg fade out bannerWrapper" style="background-image: url('images/banner/banner_bg.jpg')">
                <div class="bannerWrap player" id="bgndVideo" data-property="{videoURL:'@backgroundVideo',containment:'div.player', showControls:false, autoPlay:true, loop:true, vol:0, mute:true, opacity:1, addRaster:true, optimizeDisplay:true}">
                </div>
            </div>
        }
    }
    else
    {
        if (bannerImage != null)
        {
            <div class="fixedBg fade out" style="background-image: url('@bannerImage.Url')">
            </div>
        }
    }
}
<section class="bannerWrapper">

    <div class="bannerContent">
        <div class="containerWrapper">

            @if (!string.IsNullOrEmpty(backgroundVideo))
            {
            <div id="wrapper" style="position:relative; padding:10px 0;z-index:10">
                <div class="goto">
                <button id="togglePlay" class="command playBtn" onclick="playYoutube()"><span class="screen-reader-text">Play / Pause Button</span></button>
                <button class="muteBtn muted" onclick="muteVideo()">Mute/Unmute</button>
                </div>
            </div>
            }
            @if (!string.IsNullOrEmpty(bannerText))
            {
                @Html.Raw(bannerText)
            }
        </div>

    </div>

</section>


<section class="bankingServices" id="sliders-container">
    <div class="containerWrapper">
        <ul>
            @if (Model.Content.AncestorOrSelf(1).HasValue("promotionPanel"))
            {
                int i = 1;
                foreach (var promotion in promotionPanel)
                {
                    var promotionTitle = promotion.GetPropertyValue<string>("promotionTitle");
                    var backgroundColor = promotion.GetPropertyValue<string>("backgroundColor");
                    //var description = promotion.GetPropertyValue<string>("description");
                    var backgroundImage = promotion.GetPropertyValue<IPublishedContent>("backgroundImage");
                    var cTAButton = promotion.GetPropertyValue<Link>("cTAButton");


                    if (i == 1)
                    {

                        <li class="bunisessBank">
                            @if (cTAButton != null)
                            {
                                if (cTAButton.Target == "_blank")
                                {
                                    <a href="@cTAButton.Url" target="_blank" class="link">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                            @promoTitle
                                        }


                                    </a>
                                }
                                else
                                {
                                    <a href="@cTAButton.Url" class="link">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                            @promoTitle
                                        }

                                    </a>
                                }
                            }


                            <figure class="imgBlock" style="background-image: url('@backgroundImage.Url')">
                                
                            </figure>
                            <div class="serviceContent">
                                <div class="title">
                                    @if (!string.IsNullOrEmpty(promotionTitle))
                                    {
                                        @Html.Raw(promotionTitle)
                                    }
                                </div>
                            </div>
                        </li>
                    }
                    else if (i == 2)
                    {
                        <li class="personalBank">
                            @if (cTAButton != null)
                            {
                                if (cTAButton.Target == "_blank")
                                {
                                    <a href="@cTAButton.Url" target="_blank" class="link">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                            @promoTitle
                                        }


                                    </a>
                                }
                                else
                                {
                                    <a href="@cTAButton.Url" class="link">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                            @promoTitle
                                        }

                                    </a>
                                }
                            }
                            <figure class="imgBlock" style="background-image: url('@backgroundImage.Url')">
                                
                            </figure>
                            <div class="serviceContent">
                                <div class="title">
                                    @if (!string.IsNullOrEmpty(promotionTitle))
                                    {
                                        @Html.Raw(promotionTitle)
                                    }

                                </div>
                            </div>
                        </li>
                    }
                    else if (i == 3)
                    {

                        <li class="mortage" style="background: @backgroundColor">
                            @if (cTAButton.Target == "_blank")
                            {
                                <a href="@cTAButton.Url" target="_blank" class="link"> </a>
                            }
                            else
                            {
                                <a href="@cTAButton.Url" class="link"></a>
                            }
                           
                                    <div class="serviceContent">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            @Html.Raw(promotionTitle)
                                        }

                                    </div>

                                   
</li>
                    }
                    else if (i == 4)
                    {

                        <li class="@classes[i]" style="background: @backgroundColor">
                            <div class="serviceContent">
                                <div class="detailBlock">
                                    @Html.Raw(promotionTitle)
                                    @if (cTAButton.Target == "_blank")
                                    {
                                        <a class="btnManasq" href="@cTAButton.Url" target="_blank" title="@cTAButton.Name"><span>@cTAButton.Name </span></a>
                                    }
                                    else
                                    {
                                        <a class="btnManasq" href="@cTAButton.Url" title="@cTAButton.Name"><span>@cTAButton.Name </span></a>
                                    }

                                </div>
                            </div>
                            <figure>
                                <img src="@backgroundImage.Url" alt="@Html.Raw(promotionTitle)">
                            </figure>
                        </li>
                    }
                    else if (i == 5)
                    {
                        <li class="didgitalCenter">
                            @if (cTAButton != null)
                            {
                                if (cTAButton.Target == "_blank")
                                {
                                    <a href="@cTAButton.Url" target="_blank" class="link">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                            @promoTitle
                                        }


                                    </a>
                                }
                                else
                                {
                                    <a href="@cTAButton.Url" class="link">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                            @promoTitle
                                        }


                                    </a>
                                }
                            }
                            <figure class="imgBlock" style="background-image: url('@backgroundImage.Url')">
                                
                            </figure>
                            <div class="serviceContent">
                                <div class="title">
                                    @if (!string.IsNullOrEmpty(promotionTitle))
                                    {
                                        @Html.Raw(promotionTitle)
                                    }
                                </div>
                            </div>
                        </li>

                    }
                    else
                    {

                        <li class="clentService">
                            @if (cTAButton != null)
                            {
                                if (cTAButton.Target == "_blank")
                                {
                                    <a href="@cTAButton.Url" target="_blank" class="link">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                            @promoTitle
                                        }


                                    </a>
                                }
                                else
                                {
                                    <a href="@cTAButton.Url" class="link">
                                        @if (!string.IsNullOrEmpty(promotionTitle))
                                        {
                                            string promoTitle = Regex.Replace(promotionTitle, "<.*?>", String.Empty);

                                            @promoTitle
                                        }


                                    </a>
                                }
                            }
                            <figure class="imgBlock" style="background-image: url('@backgroundImage.Url')">
                                
                            </figure>
                            <div class="serviceContent">
                                <div class="title">
                                    @if (!string.IsNullOrEmpty(promotionTitle))
                                    {
                                        @Html.Raw(promotionTitle)
                                    }
                                </div>
                            </div>
                        </li>
                    }
                    i++;
                }
            }
        </ul>
    </div>
</section>
<section class="bluePannel home animatable">
    <div class="containerWrapper">
        <div class="bgWrap">
            @if (Model.Content.AncestorOrSelf(1).HasValue("actionPanel"))
            {
                int j = 1;
                foreach (var action in actionPanel)
                {
                    var actionTitle = action.GetPropertyValue<string>("actionTitle");
                    var actionDescription = action.GetPropertyValue<string>("actionDescription");
                    var tagLineSentence = action.GetPropertyValue<string>("tagLineSentence");
                    var actioncTAButton = action.GetPropertyValue<Link>("actioncTAButton");
                    <div class="detailsWrap">
                        <div class="wraps">
                            @if (!string.IsNullOrEmpty(actionTitle))
                            {
                                <h2>@actionTitle </h2>
                            }
                            @if (!string.IsNullOrEmpty(tagLineSentence))
                            {
                                <h3>@tagLineSentence </h3>
                            }
                            @if (!string.IsNullOrEmpty(actionDescription))
                            {
                                @Html.Raw(actionDescription)
                            }
                        </div>
                        @if (actioncTAButton.Target == "_blank")
                        {
                            <a class="btnManasq" href="@actioncTAButton.Url" target="_blank" title="@actioncTAButton.Name"><span>@actioncTAButton.Name </span></a>
                        }
                        else
                        {
                            <a class="btnManasq" href="@actioncTAButton.Url" title="@actioncTAButton.Name"><span>@actioncTAButton.Name </span></a>
                        }

                    </div>
                    if (j == 1)
                    {

                        <figure>
                            <img src="~/images/home/img_or.png" alt="OR">
                        </figure>
                    }
                    j++;
                }

            }
        </div>
       
    </div>
</section>
@{

            var foundationbackgroundImage = Model.Content.GetPropertyValue<IPublishedContent>("backgroundImage");
            var titleText = Model.Content.GetPropertyValue<string>("titleText");
            var foundationTaglineText = Model.Content.GetPropertyValue<string>("foundationTaglineText");
            var foundationDescription = Model.Content.GetPropertyValue<string>("foundationDescription");
            var foundationcTAButton = Model.Content.GetPropertyValue<Link>("cTAButton");
}
<section class="communityPannel animatable">
    <div class="bgWraps">
        <div class="imgBlock">
            <div class="containerWrapper">
                <figure style="background-image: url('@foundationbackgroundImage.Url')">
                </figure>
            </div>
        </div>
        <div class="titleBlock">
            <div class="containerWrapper">
                @if (!string.IsNullOrEmpty(titleText))
                {
                    <h2>@Html.Raw(titleText.Replace(" ", "</br>")) </h2>
                }


            </div>
        </div>
        <div class="redBlock">
            <div class="containerWrapper">
                @if (!string.IsNullOrEmpty(foundationTaglineText))
                {
                    <h2>@Html.Raw(foundationTaglineText.Replace(" ", "</br>")) </h2>
                }
            </div>
        </div>
        <div class="detailBlock">
            <div class="containerWrapper">
                <div class="wraps">
                    @if (!string.IsNullOrEmpty(foundationDescription))
                    {
                        @Html.Raw(foundationDescription)
                    }
                    @if (foundationcTAButton.Target == "_blank")
                    {
                        <a class="btnManasq" href="@foundationcTAButton.Url" target="_blank" title="@foundationcTAButton.Name"><span>@foundationcTAButton.Name </span></a>
                    }
                    else
                    {
                        <a class="btnManasq" href="@foundationcTAButton.Url" title="@foundationcTAButton.Name"><span>@foundationcTAButton.Name </span></a>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
@{
            var appTitle = Model.Content.GetPropertyValue<string>("appTitle");
            var appleStoreLink = Model.Content.GetPropertyValue<string>("appleStoreLink");
            var googlePlayStoreLink = Model.Content.GetPropertyValue<string>("googlePlayStoreLink");
            var appDescription = Model.Content.GetPropertyValue<string>("appDescription");
            var appLogo = Model.Content.GetPropertyValue<IPublishedContent>("appLogo");
}

<section class="appPannel animatable">
    <div class="containerWrapper">
        <div class="bgWraps">
            <div class="appDetails">
                @if (!string.IsNullOrEmpty(appTitle))
                {
                    <h2>@appTitle </h2>
                }
                @if (!string.IsNullOrEmpty(appDescription))
                {
                    @Html.Raw(appDescription)
                }
                <div class="appStores">
                    <figure class="">
                        <a href="@appleStoreLink" target="_blank">

                            <img src="~/images/home/apple_app.png" alt="App Store Icon">
                        </a>
                    </figure>
                    <figure>
                        <a href="@googlePlayStoreLink" target="_blank">
                            <img src="~/images/home/google_app.png" alt="Play Store Icon">
                        </a>
                    </figure>
                </div>
            </div>
            <figure class="imgDesg">
                @if (appLogo != null)
                {
                    <img src="@appLogo.Url" alt="Mobile Icon">
                }

            </figure>
        </div>
    </div>
</section>
@{
            var knowledgeTitle = Model.Content.GetPropertyValue<string>("knowledgeTitle");
            var knowledgeBackgroundImage = Model.Content.GetPropertyValue<IPublishedContent>("knowledgeBackgroundImage");
            var featureDescription = Model.Content.GetPropertyValue<string>("featureDescription");
            var featurecTAButton = Model.Content.GetPropertyValue<Link>("featurecTAButton");
            var featureLists = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("featureLists");
}
<section class="knowledgePannel animatable">
    <div class="containerWrapper">
        <div class="bgWraps">
            @if (!string.IsNullOrEmpty(knowledgeTitle))
            {
                <h2>@knowledgeTitle </h2>
            }
            @if (!string.IsNullOrEmpty(featureDescription))
            {
                @Html.Raw(featureDescription)
            }
            @if (Model.Content.AncestorOrSelf(1).HasValue("featureLists"))
            {
                <ul>
                    @foreach (var feature in featureLists)
                    {
                        var featureTitle = feature.GetPropertyValue<string>("featureTitle");
                        var featureImage = feature.GetPropertyValue<IPublishedContent>("featureImage");
                        <li>
                            <figure>
                                <img src="@featureImage.Url" alt="@featureTitle">
                            </figure>
                            @if (!string.IsNullOrEmpty(featureTitle))
                            {
                                <h4>@featureTitle </h4>
                            }
                        </li>
                    }
                </ul>
            }


            @if (featurecTAButton.Target == "_blank")
            {
                <a class="btnManasq" href="@featurecTAButton.Url" target="_blank" title="@featurecTAButton.Name"><span>@featurecTAButton.Name </span></a>
            }
            else
            {
                <a class="btnManasq" href="@featurecTAButton.Url" title="@featurecTAButton.Name"><span>@featurecTAButton.Name </span></a>
            }

        </div>
    </div>
</section>

@Html.Partial("SocialMedia")

@section InnerBottomScript {

    <script>

    var myPlayer;
    jQuery(function() {

      myPlayer = jQuery("#bgndVideo").YTPlayer();

	  $("#togglePlay").click(function(){
        if(!$("#togglePlay").hasClass("play") && !$("#togglePlay").hasClass("pause") && !$("#togglePlay").hasClass("loading"))
        {
		$("#togglePlay").addClass("loading");
      }
      });

      // EVENTS: YTPReady YTPStart YTPEnd YTPPlay YTPLoop YTPPause YTPBuffering YTPMuted YTPUnmuted YTPChangeVideo
        myPlayer.on("YTPReady YTPStart YTPEnd YTPPlay YTPLoop YTPPause YTPBuffering YTPMuted YTPUnmuted YTPChangeVideo", function (e) {
        if (e.type == 'YTPReady') {
          $("#togglePlay").addClass("play");
          $("#togglePlay").removeClass("pause loading");

            $(".goto").addClass("visible");
        }

      });
      myPlayer.on("YTPBuffering", function(){
        $("#togglePlay").addClass("loading");
        $("#togglePlay").removeClass("play pause");

      });
      myPlayer.on("YTPPlay", function(){
        $("#togglePlay").addClass("pause");
        $("#togglePlay").removeClass("play loading");

      });
      myPlayer.on("YTPMuted", function(){
        $(".muteBtn").addClass("muted");
        $(".muteBtn").removeClass("unmuted");

      });
      myPlayer.on("YTPUnmuted", function(){
        $(".muteBtn").addClass("unmuted");
        $(".muteBtn").removeClass("muted");

      });

      myPlayer.on("YTPPause", function(){
        $("#togglePlay").addClass("play");
        $("#togglePlay").removeClass("pause loading");

      });
    });

    function checkForVal(val) {
      return val || 0;
    }
    function playYoutube() {
        jQuery('#bgndVideo').YTPTogglePlay()
    }
    function muteVideo() {
        jQuery('#bgndVideo').YTPToggleVolume()
    }

</script>

}
